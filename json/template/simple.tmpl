package {{ .Key }}

import (
	"github.com/gin-gonic/gin"
	"github.com/rs/zerolog/log"
	"github.com/kuchensheng/bintools/json/model"
	"errors"
	"encoding/json"
)

var tenantId = func() string{
    t := "default"

    {{ if eq .TenantId "" }}
        log.Info().Msg("空租户ID")
    {{ else }}
        t = `{{ .TenantId }}`
    {{ end }}
    return t
}()

var steps = func() []model.ApixStep {
	var steps []model.ApixStep
	//将字符串内容初始化
	var strStep = `{{.ApixSteps}}`
	if err := json.Unmarshal([]byte(strStep), &steps);err != nil {
            log.Error().Msgf("步骤信息初始化失败,%v",err)
    }
	return steps
}()

func Executor{{.Key }}(ctx *gin.Context) (any, error) {
	log.Info().Msgf("请求地址:%s",ctx.Request.URL.Path)
	tId := ctx.GetHeader("isc-tenant-id")
	if (tenantId != tId) {
	    return nil,errors.New("禁止操作：租户不匹配")
	}
	return "我是库陈胜",nil
}
