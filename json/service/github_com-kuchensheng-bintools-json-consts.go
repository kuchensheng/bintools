// Code generated by 'yaegi extract github.com/kuchensheng/bintools/json/consts'. DO NOT EDIT.

package service

import (
	"github.com/kuchensheng/bintools/json/consts"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/kuchensheng/bintools/json/consts/consts"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ARRAY":             reflect.ValueOf(constant.MakeFromLiteral("\"array\"", token.STRING, 0)),
		"Cache":             reflect.ValueOf(&consts.Cache).Elem(),
		"KEY_BODY":          reflect.ValueOf(constant.MakeFromLiteral("\"body\"", token.STRING, 0)),
		"KEY_COOKIE":        reflect.ValueOf(constant.MakeFromLiteral("\"cookie\"", token.STRING, 0)),
		"KEY_FORM":          reflect.ValueOf(constant.MakeFromLiteral("\"form\"", token.STRING, 0)),
		"KEY_HEADER":        reflect.ValueOf(constant.MakeFromLiteral("\"header\"", token.STRING, 0)),
		"KEY_PATH":          reflect.ValueOf(constant.MakeFromLiteral("\"path\"", token.STRING, 0)),
		"KEY_QUERY":         reflect.ValueOf(constant.MakeFromLiteral("\"query\"", token.STRING, 0)),
		"KEY_REQ":           reflect.ValueOf(constant.MakeFromLiteral("\"$req\"", token.STRING, 0)),
		"KEY_REQ_BODY":      reflect.ValueOf(constant.MakeFromLiteral("\"$req.data\"", token.STRING, 0)),
		"KEY_REQ_CONNECTOR": reflect.ValueOf(constant.MakeFromLiteral("\".\"", token.STRING, 0)),
		"KEY_REQ_COOKIE":    reflect.ValueOf(constant.MakeFromLiteral("\"$req.cookie\"", token.STRING, 0)),
		"KEY_REQ_FORM":      reflect.ValueOf(constant.MakeFromLiteral("\"$req.form\"", token.STRING, 0)),
		"KEY_REQ_HEADER":    reflect.ValueOf(constant.MakeFromLiteral("\"$req.header\"", token.STRING, 0)),
		"KEY_REQ_PATH":      reflect.ValueOf(constant.MakeFromLiteral("\"$req.path\"", token.STRING, 0)),
		"KEY_REQ_QUERY":     reflect.ValueOf(constant.MakeFromLiteral("\"$req.query\"", token.STRING, 0)),
		"KEY_TOKEN":         reflect.ValueOf(constant.MakeFromLiteral("\"$\"", token.STRING, 0)),
		"OBJECT":            reflect.ValueOf(constant.MakeFromLiteral("\"object\"", token.STRING, 0)),
		"PARAMETERMAP":      reflect.ValueOf(constant.MakeFromLiteral("\"parameterMap\"", token.STRING, 0)),
		"RESULTMAP":         reflect.ValueOf(constant.MakeFromLiteral("\"resultMap\"", token.STRING, 0)),
		"TRACER":            reflect.ValueOf(constant.MakeFromLiteral("\"tracer\"", token.STRING, 0)),
	}
}
