// Code generated by 'yaegi extract github.com/rs/zerolog/log'. DO NOT EDIT.

package extractlib

import (
	"github.com/rs/zerolog/log"
	"reflect"
)

func init() {
	Symbols["github.com/rs/zerolog/log/log"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Ctx":       reflect.ValueOf(log.Ctx),
		"Debug":     reflect.ValueOf(log.Debug),
		"Err":       reflect.ValueOf(log.Err),
		"Error":     reflect.ValueOf(log.Error),
		"Fatal":     reflect.ValueOf(log.Fatal),
		"Hook":      reflect.ValueOf(log.Hook),
		"Info":      reflect.ValueOf(log.Info),
		"Level":     reflect.ValueOf(log.Level),
		"Log":       reflect.ValueOf(log.Log),
		"Logger":    reflect.ValueOf(&log.Logger).Elem(),
		"Output":    reflect.ValueOf(log.Output),
		"Panic":     reflect.ValueOf(log.Panic),
		"Print":     reflect.ValueOf(log.Print),
		"Printf":    reflect.ValueOf(log.Printf),
		"Sample":    reflect.ValueOf(log.Sample),
		"Trace":     reflect.ValueOf(log.Trace),
		"Warn":      reflect.ValueOf(log.Warn),
		"With":      reflect.ValueOf(log.With),
		"WithLevel": reflect.ValueOf(log.WithLevel),
	}
}
